---
format:
  revealjs:
    slide-number: true
    chalkboard: true
    fig-width: 6
    fig-asp: 0.618
    template-partials:
      - "../title-slide.html"
css: "../slides_quarto.css"
standalone: false
include-in-header: "../header_quarto.html"
logo: "../Intro2SL_logo_white.jpg"
pagetitle: "Intro. to Statistical Learning"
callout-appearance: simple
smaller: true
execute:
  eval: true
  echo: true
code-line-numbers: false
code-block-border-left: true
highlight-style: github
footer: "[Intro to Statistical Learning](https://intro2statlearn.github.io/mooc/){target='_blank'}"
---

## {.logo-slide}

## Introduction to Statistical Learning {.title-slide}

### Intro to Statistical Learning - Class 1

### Giora Simchoni

#### `gsimchoni@gmail.com` and add `#intro2sl` in subject

### Stat. and OR Department, TAU

---

## What is Statistical Learning? {.title-slide}

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
שלום. וברוכים הבאים לשיעור הראשון בקורס מבוא ללמידה סטטיסטית. בשיעור הזה נחזור על מושגים חשובים בלמידה, כמו אוברפיטינג, הביאס-וריאנס טריידאוף וטעות החיזוי. נראה איך המושגים האלה באים לידי ביטוי ברגרסיה ובקלסיפיקציה. אבל קודם כל ננסה להגדיר: מהי בכלל למידה סטטיסטית?

:::
:::

---

### What is Statistical Learning?

::: {.incremental}
- Statistical learning is the task of understanding data, and making predictions based on data
- It is a sub-domain of machine learning
- It uses statistics to build models that approximate the data
- There is a diverse set of tools for this task, where different problems calls for different tools
- We will focus on the statistical aspect of the task, and rarely mention computational aspects
:::

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
מטרות העל של למידה סטטיסטית הן הבנה של הנתונים שאנחנו מביטים בהם, וחיזוי על סמך נתונים אלה.

נהוג לומר שלמידה סטטיסטית היא תת-תחום בעולם למידת המכונה, שהרי ההסתכלות הזאת של למידה מתוך נתונים היא לא האפשרות היחידה. מודלים של בינה מלאכותית קיימים גם מחוץ ללמידה סטטיסטית, כמו למשל למידת חיזוק, שהמודל הנלמד הוא תוצאה של ניסיון מתמשך מול העולם. ויש גם ניסיון ללמוד מודלים על-ידי הגדרת כללים ותרשימי זרימה, לאו דוקא על סמך נתונים.

אבל בלמידה סטטיסטית הדגש הוא על נתונים, וכשמה כן היא, הכלי העיקרי שבו אנחנו משתמשים לבניית מודלים הוא סטטיסטיקה והסתברות.

ועדיין, תת העולם שאנחנו מסתכלים עליו הוא עצום, וקיימים כלים רבים ומגוונים ללמידת מודלים על סמך הנתונים. בקורס זה נלמד את הכלים האלה בראייה סטטיסטית ולאו דוקא חישובית, ונדבר מעט יחסית על הסיבוכיות שלהם, ונשים דגש על איך בוחרים נכון את הכלי לטיפול בנתונים. הכלי הנכון לטיפול בנתונים נובע מהנתונים עצמם.
:::
:::

---

### Key Concepts

::: {.incremental}
- The data is a set of features (covariates/ independent variables/ predictors):
  - Continuous
  - Ordered categorical (discrete)
  - Unordered categorical
- Using them we construct a model (learner) of the data
- Usually we use the model to predict a goal:
  - When the goal is continuous the model is a [regression model]{style="color:red;"}
  - When the goal is categorical the model is a [classification model]{style="color:red;"} (classifier)
:::

::: {.fragment}
::: {.callout-note}
Question: Can one use regression for classification and vice versa? We will get back to it later.
:::
:::

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
בואו נחזור על כמה מושגי יסוד. נתייחס לדאטא שלנו כקבוצה של פיצ'רים, במקומות אחרים נראה גם שמות כמו משתנים מנבאים או בלתי תלויים. המשתנים האלה יכולים להיות רציפים גמו לדוגמא גובה, משתנים בדידים אורדינליים כמו למשל מספר הכוכבים של מלון. והם יכולים להיות גם בדידים קטגוריאליים ללא משמעות לסדר, כמו צבע עיניים.

בבעיות אמיתיות החלוקה הזאת לא תמיד ברורה, וגם הבחירה בסוג המשתנה שעומד מולי ואיך לייצג אותו, יכולה להיות תלויה במטרה הסופית של הפרויקט עליו אני עובד, לדוגמא להקטין טעות חיזוי. הרי אם מזינים גובה של אנשים בסנטימטרים שלמים, הוא לא באמת רציף, הוא בדיד ואורדינלי, אבל קשה לחשוב על יישום שבו יהיה יתרון להתייחס לגובה כמשתנה בדיד. מצד שני אם הזכרנו את מספר הכוכבים של בית מלון, יכול להיות שאפשר היה להתייחס אל משתנה כזה כרציף? פשוט להחליף את מספר הכוכבים ל1 עד 5? אולי, אבל כאן תסתתר הנחה שיש מרווחים קבועים בין הכוכבים, הנחה שהיא לא בטוח נכונה. כל מי שבדק פעם מלונות באינטרנט יודע שמלונות עד 3 כוכבים הם פחות טובים ושיש קפיצה משמעותית באיכות המלון כשמדברים על 4 ו-5 כוכבים. למעשה אולי נכון ביישומים מסוימים להתייחס לאיכות המלון כמשתנה בינארי - 3 כוכבים ומטה או 4 ומעלה.

ואפילו בדוגמא של צבע העיניים, צבע עצמו הוא לא בהכרח משתנה בדיד! הרי הצבע שאנחנו רואים הוא תוצר של הספקטרום האלקטרומגנטי, ותדרי גל אלקטרומגנטי שונים יוצרים צבעים שונים. סגול מתאים לגלים קצרים, ואדום לגלים ארוכים. זה משהו שכדאי לחשוב עליו בעבודה מעשית עם נתונים.

את כל הפיצ'רים האלה נבחן כדי לבנות מודל או לרנר בדרך כלל למטרת חיזוי. כשאם החיזוי הוא של משתנה רציף אנחנו קוראים לסטינג הזה רגרסיה, ואם החיזוי הוא של משתנה בדיד אנחנו קוראים לסטינג הזה קלסיפיקציה, ולמודל קלסיפייר.

שאלה חשובה: האם אפשר להשתמש במודלים לרגרסיה עבור בעיות קלסיפיקציה ולהיפך? התשובה המפתיעה היא שכן, וזה תלוי שוב במטרת הפרויקט, ומה עובד לנתונים שלכם. נחזור לדילמה הזאת מאוחר יותר בקורס.
:::
:::

---

## Supervised and Unsupervised Learning {.title-slide}

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
נהוג להפריד את הלמידה הסטטיסטית לשני סוגים עיקריים: למידה מפוקחת שבה יש משתנה מטרה ברור שאת האופי שלו אנחנו רוצים להבין או לחזות כתלות בנתונים, ולמידה בלתי מפוקחת, שבה אין משתנה מטרה, הנתונים עצמם הם לב העניין.
:::
:::

---

### Supervised Learning

::: {.incremental}
- Definition: 
  - Input: Let $x$ be a vector of length $n$, and let $y = f(x) + \varepsilon$, where $E(\varepsilon) = 0$, $Var(\varepsilon) = \sigma^2$, $(\varepsilon, x)$ are independent
  - Goal: learn $f$ given a set of inputs $(X, y)$
- In most cases we can only find a function $\hat{f} \approx f$, an estimator
- The approximation is measured relative to some loss function $L(y, \hat{y})$
  - Regression example: MSE (This will be our common choice), MAE
  - Classification example: misclassification rate, recall and precision
:::

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
מהי למידה מפוקחת?

אם איקס הוא וקטור באורך n של נתונים, אנחנו מניחים שוואי, וקטור אחר שאנחנו רואים הוא תוצאה של איזושהי פונקציה f ועוד משתנה רעש אפסילון. במודל הכי פשוט לרעש הזה יש תוחלת אפס ואיזושהי שונות סיגמא בריבוע, והוא לא תלוי בתצפיות, כלומר הוא קבוע. ברור שאפשר לחשוב על מודל מסובך יותר, כמו למשל שהרעש כן יהיה תלוי בנתונים, אבל נתחיל בזה.

מה לומדים בלמידה מפוקחת? את f, כיצד X משפיע על Y, כאשר נהוג לחשוב על המשתנה התלוי Y כ"המפקח", כי ההשתנות שלו תקבע את הלמידה שלנו.

ברוב המקרים אין לנו דרך ללמוד את f האמיתית, אנחנו יודעים שאנחנו מקבלים רק אומד, f האט, וטיב האמידה שלנו ייקבע באמצעות פונקצית הפסד או לוס, שנסמן בL, מטריקה בין Y ל-Y הנחזה שנסמן כY האט, שנרצה להביא למינימום.

בסטינג של רגרסיה הלוס הנפוץ ביותר הוא השגיאה הריבועית או הממוצע שלה על פני התצפיות, הMSE, אבל לא רק. אפשר לחשוב למשל על ממוצע השגיאה האבסולוטית, בערך מוחלט, הMAE. לדוגמא ביישום שנוגע לחיזוי מחיר, כשY הוא כסף, למה שארצה להעניש בעונש ריבועי תצפיות שרחוקות מהאמת. כסף הוא כסף, ואולי אעדיף שגיאה בערך מוחלט.

בקלסיפיקציה הלוס הנפוץ הוא המיסקלסיפיקיישן רייט, שגיאת החיזוי שעוד נדבר עליה בשיעור זה. אבל יש הרבה בעיות עם הלוס הזה ביישומים אמיתיים, למשל בחיזוי מחלות נדירות. עבור מחלה שמופיעה בסיכוי נדיר של 1 אחוז, מהו קלסיפייר פשוט שיביא לשגיאת חיזוי נמוכה של 1 אחוז? לחזות שכולם בריאים. אז ביישומים כגון זה נעדיף אולי להסתכל על פרסיז'ן או ריקול. פרסיז'ן זה המדד שאומד את ההסתברות לחיזוי נכון של פציינט בהינתן שהמודל חוזה שהוא חולה. ריקול זה המדד שאומד את ההסתברות לחיזוי נכון של פציינט בהינתן שהוא אכן חולה. ובדוגמא שלנו, מודל שחוזה שכולם בריאים במחלה נדירה, יביא לריקול אפס, ולפרסיז'ן לא מוגדר.
:::
:::

---

### Supervised Learning: examples

- Goal: Predict the total sales of a product in a given day
  - Covariates: price, geographical region, day of week, holiday, ...
- Goal: Predict if a client of a cellular company will churn
  - Covariates: usage, age, socio-economical status, phone type, ...
- Goal: Personalized medicine (e.g. what is the effective medicine dosage for a *specific* patient)
  - Covariates: genes profile, effectiveness on cell tissues, ...
  - Drug cost is a part of the loss function $L$!

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
דוגמאות ללמידה מפוקחת יש הרבה:

Y יהיה סך המכירות של מוצר ביום נתון, המשתנים בX יהיו מחיר המוצר, המיקום הגאוגרפי של המכירות, האם יש יום חופש.

Y יהיה האם לקוח של חברת סלולר יעזוב את החברה, מונח שנקרא צ'רן. המשתנים בX יהיו כמות השימוש בסלולרי שלו, גיל, סוג הפלאפון ועוד.

יישום מודרני יותר יכול להיות ברפואה ממוקדת. Y יהיה המינון המתאים לתרופה של חולה ספציפי, והמשתנים יהיו הפרופיל הגנטי שלו, האפקטיביות של טיפול כפי שנמדדה על רקמות תאים, ואם נהיה ציניים נוכל לכלול אפילו את מחיר התרופה עבור החולה ועבור קופת החולים. אבל אם המחיר הכלכלי כל כך מהותי לאפליקציה הזאת, אפשר גם לנסח את פונקצית ההפסד באופן שיכלול את המינימיזציה שלו, או כאילוץ.

כך שאנחנו רואים שהמושג של למידה מפוקחת כולל בתוכו שלל אתגרים מכל תחומי המחקר.
:::
:::

---

### Supervised Learning: wage prediction

```{python}
#| echo: false

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

wage = pd.read_csv('../datasets/Wage.csv')
wage['education'] = pd.Categorical(wage['education'], ordered=True)

fig, axes = plt.subplots(1, 3, figsize = (3 * 5, 3))
sns.regplot(data=wage, x='age', y='wage', color = 'grey', lowess=True, line_kws=dict(color="blue"), ax=axes[0])
sns.regplot(data=wage, x='year', y='wage', color = 'grey', order=1, line_kws=dict(color="blue"), ax=axes[1])
sns.boxplot(data=wage, x='education', y='wage', ax = axes[2])
axes[1].set_ylabel('')
axes[1].set_xlim((2003 - 0.5, 2009 + 0.5))
axes[2].set_ylabel('')
axes[2].set_xticklabels(range(1, 6))
plt.show()
```

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
 גם פונקצית ה-f שאנחנו אומדים, יכולים להיות לה פרופילים רבים. כאן אנחנו רואים נתונים אמיתיים של שכר שנתי של כ3000 גברים בארה"ב, כל פעם כפונקציה של משתנה אחר.

 שכר שנתי כפונקציה של גיל מתאר דפוס עולה עד לשיא בגילאי 40-50 ואז יורד קצת.

 שכר כפונקציה של שנה, מתאר דפוס של עלייה ליניארית עם שיפוע ממש קטן, כמעט בלתי נראה. כאן למרות שקשה להבחין בזה השכר החציוני עולה בכאלף דולר כל שנה!

בגרף השלישי מתוארת ההשתנות של Y כפונקציה של רמת ההשכלה. רמת ההשכלה המתוארת כאן היא מאנשים שלא סיימו תיכון, ועד אנשים עם תואר שני ומעלה. זאת דוגמא מצוינת למשתנה שאפשר היה לחשוב עליו כמשתנה רציף, כמו שנה, אבל לא ברור אם היחס בין כל שתי רמות נשמר ולכן טבעי יותר להתיחס אליו כמשתנה בדיד אורדינלי, ולצייר בוקספלוטים במקום תרשים פיזור. כך או כך, ברור שהשכר החציוני עולה ככל שההשכלה עולה.
:::
:::

---

### Unsupervised Learning

What if there is no $y$?

::: {.incremental}
- Given set of features $x$ find a model that describes properties of the data:
  - Clusters
  - Dependencies
  - Correlations
  - Common factors (PCA)
- Problems in which we model the *covariates data* are called [unsupervised]{style="color:red;"}
- Most of the course: we will focus on supervised learning
:::

::: {.fragment}
::: {.callout-note}
[Semi-supervised]{style="color:red;"}: there exists a goal but it is partially labeled
:::
:::

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
מה עם אין לנו מפקח? אין משתנה תלוי. יש לנו רק דאטא X, ואנחנו רוצים ללמוד תכונות שלו.

היינו רוצים לדעת על קלאסטרים בתוך הדאטא, לדוגמא למטרות שיווקיות. אנחנו אתר מכירות עם הרבה לקוחות והיינו רוצים להקצות איש מכירות שיתמחה בפלח אחר של הלקוחות שלנו. אבל לא היינו רוצים לנסות להגדיר לבד את הקבוצות השונות של לקוחות, אלא היינו רוצים שהדאטא יראה לנו קלאסטרים טבעיים בנתוני הלקוחות. איזה דאטא? כל דבר החל ממין וגיל, ועד דפוסי גלישה ורכישה.

תחום אחר שנחשב ללמידה בלתי מפוקחת ינסה למצוא מתאמים בין הפיצ'רים, ותלויות. 

אנחנו יודעים למצוא קורלציה בין שני משתנים אבל הרי לא נעבור על כל הזוגות האפשריים של פיצ'רים ונחשב קורלציה, נרצה גם לדעת על קורלציות בין שילובי משתנים, כמו קבוצה של 3 שאלות במבחן כלשהו עם 4 שאלות אחרות. יחסים כאלה נקראים פקטורים והכלי הכי מוכר למצוא אותם הוא PCA.

כל הבעיות האלה שבהן אנחנו ממדלים את השתנות הפיצ'רים של הדאטא ואין לנו Y מפקח הן בעיות אנסופרוויזד. נעסוק בהן בקורס אבל פחות, רוב הקורס יתמקד בלמידה סופרוויזד.

מילה אחרונה לגבי סוג למידה נוסף או ביניים, שפופולרי במיוחד בעידן הביג-דאטא. בהרבה יישומים יש לי תרחיש של הרבה מאוד נתונים בלתי-מפוקחים, כלומר אין לי לגביהם את המשתנה התלוי הY או הלייבל, וסט נתונים קטן יותר שלגביהם יש לי את Y, הלייבל. זה קורה הרבה פעמים מסיבות של תקציב, אפשר לחשוב על אתר כמו אינסטגרם עם מיליוני תמונות של משתמשים. היינו רוצים לתת כותרת למה מתארת התמונה, ומסיבות של תקציב אנחנו יכולים לעשות את זה בצורה ידנית רק לכ10 אלף תמונות. אבל יש עוד מיליוני תמונות! למידה סמי-סופרוויזד או "חצי-מפוקחת", מאפשרת לממדל להשתמש בדאטא האנלייבלד על מנת לשפר את המודל שנבנה עם הדאטא הלייבלד. כנראה שנוכל למדל טוב יותר את ההסתברות של Y בהינתן הנתונים X אם נדע טוב יותר את ההתפלגות של הנתונים עצמם X. כשמדברים על רשתות נוירונים ההבנה הזאת מפיקה ארכיטקטורה טבעית של רשת לבעיה, אבל רשתות נוירונים הם לא בסקופ של הקורס שלנו ונעצור את זה כאן.
:::
:::

---

## Parametric and Non-Parametric Models {.title-slide}

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
נבחין כעת בין מודלים פרמטרים למודלים א-פרמטרים.
:::
:::

---

### Why estimate $f$?

::: {.fragment}
- For [prediction]{style="color:red;"}: Given a new instance vector $x$, predict: $\hat{y} = \hat{f}(x)$
  - This seems like a reasonable choice since the noise is zero-mean
:::
::: {.fragment}
- For [inference]{style="color:red;"}: Suppose that we learned an estimator $\hat{f}$, we can use it to learn properties of the input, such as:
  - Which variables of $x$ affects $y$?
  - Given a subset of variables $X^{'} \subset X$, is a variable $X^{''} \not\subset X^{'}$ informative for $f(y | X')$?
  - How well can we approximate $y$?
:::

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
סוג המודל שנבחר קשור קשר הדוק למהי המטרה שלנו. אז... מהי המטרה שלנו? למה לאמוד את f?

בגדול יש שתי מטרות. המטרה שנראית לעיתים כחזות הכל היא פרדיקציה, בהינתן תצפית חדשה איקס, נרצה לאמוד את הוואי המתאים לה, הוא המודל הנאמד f האט, כי תוחלת הרעש היא אפס.

אבל פרדיקציה היא לא חזות הכל! בעולם המחקר פעמים רבות המטרה היא לא בהכרח לחזות בצורה הטובה ביותר עבור תצפית חדשה, אלא מה שקרוי בסטטיסטיקה הסקה - להבין כיצד הנתונים בX משפיעים על Y. בדוגמא שראינו למשל, אולי התובנה שההשפעה של גיל על שכר היא לא רק שלא ליניארית אלא שהיא אפילו לא מונוטונית - אולי התובנה הזאת היא מטרת המחקר.

שאלה אחרת יכולה להיות ההשפעה של משתנים מסוימים על Y בהינתן משתנים אחרים. כלומר אם אני יודע מצב סוציו-אקונומי על סטודנט, האם המוצא שלו משפיע על הציון? רק התשובה לשאלה הזאת יכולה להיות שווה פרסום.

ואולי השאלה היא בכלל לא על אופן ההשפעה על על טיב היכולת בכלל לאמוד את הקשר בין X לY. לדוגמא מחקר שיעסוק בניסיון עצמו לחזות ציון של סטודנט בקורס ויכמת את טיב האמידה של חיזוי כזה כפונקציה של עוד ועוד משתנים.

מכל מקום המטרה השניה של הסקה סטטיסטית היא לא נחלתם של חוקרים בלבד, והיא הרבה פעמים קלה יותר במודלים פשוטים יותר שמעניינים למשל רופאים. כשרופאה רוצה לקבוע פרוגנוזה של חומרת מחלה או להעריך כמה זמן אשפוז יצטרך פציינט, היא בודאי היתה מעדיפה מודל שהיא מסוגלת להבין ולתמוך בו, מודל שעושה שכל. ולא בהכרח המודל שחוזה בצורה המדויקת ביותר את חומרת המחלה או זמן האשפוז.
:::
:::

---

### The Estimation Problem

How do we learn $\hat{f}$?

::: {.incremental}
- Let $T = \{(x_1, y_1) \dots (x_n, y_n)\}$ be a training sample of size $n$
  - Note that $x_i = \begin{pmatrix}x_{i1} \\ \vdots \\ x_{ip}\end{pmatrix}$ is a vector of $p$ features (by notation a column vector)
- We assume that there exists a joint distribution $X \times Y$, and that $(x_i, y_i)$ is sampled from it
  - Usually we assume that the samples are iid
- In general most learning methods can be divided into [parametric]{style="color:red;"} methods and [non-parametric]{style="color:red;"} methods
:::

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
בכל מקרה בדרך כלל נקבל מדגם למידה שנסמן כT, עם n זוגות של X ו-Y. נשים לב שX יכול להיות בעצמו וקטור, בדרך כלל נסמן כוקטור עמודה באורך P פיצ'רים.

אנחנו מניחים שקיימת התפלגות משותפת של X וY על המרחב המשותף הזה שמתוכה אנחנו רואים דגימות, ובנוסף שהדגימות האלה בלתי תלויות.

ואת המודל שנבחר לתאר את f כפונקציה של מדגם הלמידה ניתן בדרך כלל לחלק לאחד משני סוגים: מודל פרמטרי ומודל א-פרמטרי.
:::
:::

---

### Parametric Models

- To learn a parametric model we first assume a known parametric form for $f(x)$, and then learn the parameters of $f$
- Example:

::: {.incremental}
  - Assume $f(x) = \beta_0 + \beta_1 x_1 + \dots + \beta_p x_p$, namely $f$ is a linear function of the inputs with unknown fixed coefficients
  - Estimate the values of $\beta = \beta_0, \dots, \beta_p$
  - How? For example using least squares (OLS): $\min_\beta \sum_i {(y_i - \beta^{T}x_i)^2}$
:::

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
מודל פרמטרי הוא בעל הנחות חזקות מאוד. אנחנו מניחים מודל עם פרמטרים מסוימים עבור f וכל שנותר הוא לאמוד את הפרמטרים האלה.

הדוגמא הקלאסית בסטינג של רגרסיה היא רגרסיה ליניארית. אנחנו מניחים שf הוא פונקציה ליניארית של המשתנים, כל משתנה מוכפל בפרמטר בטא וf הוא סכום המכפלות הללו.

כל שנשאר הוא לשערך את הפרמטרים בטא, זה מה שכל אלגוריתם תחת הכותרת רגרסיה ליניארית ינסה לעשות. הקריטריון הקלאסי הוא עקרון הריבועים הפחותים ונרחיב על איך להביא אותו למינימום בהמשך, אבל ההנחה ברורה והמטרה ברורה, לאמוד את הבטא. נשים לב שהמודל הליניארי כפי שהוא מנוסח כרגע ועקרון הריבועים הפחותים, לא תלוי בשום היבט סטטיסטי, אין כאן שום אלמנט הסתברותי. כשנדבר על רגרסיה ליניארית נראה מה מוסיף ההיבט הסטטיסטי.
:::
:::

---

### Non-Parametric Models

- Don't assume the form of $f(x)$, the model just wants $f(x)$ to be close to the data
  - Under the assumption that $f(x)$ belongs to a wide family of smooth functions
- Example:

::: {.incremental}
  - Splines – smooth piecewise polynomials.
  - Why do we need the smoothness for?
  - If we remove the smoothness assumption then what is the *best* $f(x)$? Is it a good choice?
  - We will get back to them later in the course
:::

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
מודל א-פרמטרי, לא מניח שום הנחה מבנית לגבי האופי של f. ובדרך כלל, פשוט נרצה שf יהיה קרוב לנתונים, יתאר אותם היטב. גם כאן הרבה פעמים תסתתר הנחה שאת f אפשר לתאר כצירוף של פונקציות כן ספציפיות חלקות ממשפחה רחבה, אבל לא בצורה פשטנית כל כך כמו במודל הליניארי.

דוגמא אחת של מודל א-פרמטרי אפשר לראות בשיטת השכנים הקרובים, KNN שנדבר עליה היום בהקשר של קלסיפיקציה בכלל.

דוגמא פחות מוכרת, שמכלילה במובן מסוים את המודל הליניארי, היא ספליינים.

(להסביר על הלוח)

בספליינים אנחנו נרצה לתאר את f כפונקציה שמחברת בין נקודות Y על-ידי פונקציות חלקות כמו פולינומים, שנפגשות זו עם זו, כמה שקרוב יותר לנתונים. נרצה פונקציות כמה שיותר חלקות, וכדי להשיג את החלקות הזאת נוסיף "עונש" למדא על הנגזרת השניה של הפונקציות האלה, כי הנגזרת השניה היא מדד טוב לכמה הפונקציה חלקה. ככל שהנגזרת השניה קטנה יותר, קצב ההשתנות של הפונקציה קטן יותר והיא חלקה יותר. אז עונש למדא גדול יביא אותנו לפונקציות מאוד חלקות אולי אפילו חלקות מדי ומוגבלות שאין להן הרבה חופש לזוז, ולהיפך עונש למדא קטן.

למה אנחנו רוצים חלקות? כי אנחנו מניחים שf היא פונקציה שמשתנה לאט, שהנוף הזה של f בהינתן הפיצ'רים בX הוא לא חד ומקוטע אלא נוף יפה של "גבעות ועמקים". ומה יקרה אם נוותר על האילוץ של החלקות או אפילו נקטין את הפרמטר של למדא מאוד? שום דבר לא יגביל את המודל שלנו למצוא את הפולינומים שפשוט עוברים דרך הנקודות! אם נניח שכן נדרוש איזו רציפות זה ממש יכול לראות קו מקוטע שיעבור בין כל זוג נקודות. וזה כנראה לא רעיון טוב, ותיכף נראה את זה פורמלית ובפועל.

מכל מקום ספליינים הם דוגמא מעולה למודל א-פרמטרי שנקבע אך ורק מהדאטא, גם אם בפועל הוא מורכב מקבוצה של פולינומים.
:::
:::

---

### From Linear Regression to Splines

```{python}
#| echo: false

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from sklearn.linear_model import LinearRegression
from matplotlib.patches import Patch
from matplotlib.lines import Line2D

from pygam import LinearGAM, s

df = pd.read_csv('../datasets/ISLP_income_data.csv')
X1 = df['Education']
X2 = df['Seniority']
X = np.column_stack((X1, X2))
Y = df['Income']

# Plotting
fig, axes = plt.subplots(1, 3, figsize=(3 * 4.5, 3), subplot_kw={'projection': '3d'})

# Create a grid of values for X1 and X2
X1_grid, X2_grid = np.meshgrid(np.linspace(min(X1), max(X1), 200),
                               np.linspace(min(X2), max(X2), 200))

# Flatten the grid to pass into the model
X_grid = np.column_stack((X1_grid.ravel(), X2_grid.ravel()))

# Define models
models = [LinearRegression(),
          LinearGAM(s(0, n_splines=10, lam=0.1) + s(1, n_splines=10, lam=0.1)),
          LinearGAM(s(0, n_splines=10, lam=0.0001) + s(1, n_splines=10, lam=0.0001))]
titles = ['Linear Regression', 'Smooth Spline', 'Rough Spline']

# Iterating through models:
for model, ax, title in zip(models, axes, titles):
  model.fit(X, Y)

  # Predict Y values
  Y_pred = model.predict(X_grid).reshape(X1_grid.shape)

  # Plot the fitted plane
  ax.scatter(X1, X2, Y, color='red', label='Data')
  ax.plot_surface(X1_grid, X2_grid, Y_pred, color='blue', alpha=0.5)

  # Add vertical lines from data points to the surface
  Y_surface = model.predict(X).reshape(Y.shape)  # Predicted Y values for the actual data points
  for x1, x2, y, y_surface in zip(X1, X2, Y, Y_surface):
      ax.plot([x1, x1], [x2, x2], [y, y_surface], color='black')

  # Labels
  ax.set_xlabel('Education')
  ax.set_ylabel('Seniority')
  ax.set_zlabel('Income')
  ax.set_title(title)

  # Adjust the viewing angle
  ax.view_init(elev=30, azim=-60)

  # Custom legend for the regression plane
  # fit_patch = Patch(color='blue', alpha=0.5, label='Fit')
  # Custom legend for the data points
  # data_points_legend = Line2D([0], [0], marker='o', color='w', markerfacecolor='red', markersize=10, label='Data points')
  # Adding the legend with custom patches
  # ax.legend(handles=[data_points_legend, fit_patch], loc='upper left')

plt.show()
```

::: {.fragment}
The rough spline seems to be [overfitting]{style="color:red;"} the data.
:::

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
כאן יש לנו בעיה של מידול הכנסה, כפונקציה של השכלה וותק, כל נקודה כאן היא תצפית עם השכלה וותק והגובה הוא ההכנסה באלפי דולרים. בקיצון האחד יש לנו מודל פרמטרי למהדרין, המודל הלינארי. בדו-מימד מה שהוא מתאים כאן זה בעצם מישור, והוא עושה את זה על-ידי אמידת 3 פרמטרים בלבד: המקדם להשכלה, המקדם לותק וחותך.

באמצע יש לנו ספליין שמסוגל לתאר איזשהו משטח או יריעה מורכבים יותר. קשה לתאר מה רואים כאן אבל זה נראה סביר.

בקיצון השני יש לנו ספליין עם פרמטר למדא כמעט אפסי, שמאפשר ליריעה להיות מקוטעת ומקומטת כרצונה עד שהיא פשוט עוברת דרך כל הנקודות.

זה כבר פחות סביר, זה נראה מאולץ מדי ונראה שאם יגיעו אנשים חדשים שנרצה לחזות את ההכנסה שלהם המודל הזה מושפע מדי מהנתונים שראה ולא יעשה עבודה טובה. מה שמביא אותנו למושג החשוב: אוברפיטינג.
:::
:::

---

## Overfitting {.title-slide}

---

### Train and Test

- The goal of a model is its predictive power, namely how well will it fit on a new/unseen/out-of-sample set of observations.
- The new set of observations is called [test set]{style="color:red;"} (as opposed to the [train set]{style="color:red;"}). 

::: {.incremental}
- Usually:
  - Dividing the data to a train and test sets
  - Learn models on train set, select models based on their performance on the test set
:::

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
כדי לדבר על אוברפיטינג צריך להזכיר שוב שבפועל אנחנו עובדים עם מדגם אימון ומדגם מבחן שהמודל לא ראה, או טריינינג סט וטסט סט.

המטרה שלנו היא להיות טובים על הטסט סט, על תצפיות שלא ראינו. לכן אנחנו מקפידים לחלק את הנתונים לטריין ולטסט, ללמוד את המודלים שלנו על הטריין ולבדוק את הביצועים שלהם על הטסט.

ברור שיש חלוקות אחרות כמו חלוקה לשלושה חלקים או קרוס ולידיישן, אבל בכל מקרה תמיד יש השוואה בין ביצועי המודל על דאטא ששימש ללמידה, וביצועיו על דאטא שהוא לא ראה, שהם בדרך כלל אינדיקציה הרבה יותר טובה לטיב המודל, ולא משנה אגב אם המטרה הסופית היא חיזוי או הסקה. גם מודל שמשמש להסקה, שבו אנחנו רוצים להבין כיצד X משפיע על Y, הוא מודל שנרצה שיראה ביצועים טובים על X וY חדשים.
:::
:::

---

### Prediction Error: first decomposition

- Assume an observation $(x, y)$, $\hat{y} = \hat{f}(x)$ is *given*, $L(y, \hat{y})$ is the MSE
- What is the expected loss?

::: {.fragment}
$E_y[(y - \hat{f}(x))^2] = E_\varepsilon[(f(x) + \varepsilon - \hat{f}(x))^2] = ?$
:::

::: {.fragment}
$\left(=\int_\varepsilon (f(x) + \varepsilon - \hat{f}(x))^2 h(\varepsilon)d\varepsilon \stackrel{\text{e.g.}}{=}\int_{-\infty}^{+\infty} (f(x) + \varepsilon - \hat{f}(x))^2 \frac{1}{\sigma\sqrt{2\pi}} \exp\left( -\frac{\varepsilon^2}{2\sigma^2}\right) d\varepsilon\right)$
:::

::: {.fragment}
$= [f(x) - \hat{f}(x)]^2 + Var(\varepsilon)$
:::

::: {.fragment}
- First term: [reducible error]{style="color:red;"}
- Second term: [irreducible error]{style="color:red;"}
:::
::: {.fragment}
- Which part should we minimize?
:::

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
נניח שקיבלנו חיזוי, כלומר החיזוי הוא לא משתנה מקרי הוא קבוע, אנחנו מתנים עליו. איך אפשר לפרק לוס ריבועי?

(להדגים)

התוחלת כאן היא על המשתנה המקרי היחידי, שהוא Y, אבל בעצם כשאני מחליף את Y במודל אני מקבל שאפסילון הוא המשתנה המקרי.

בשלב הזה, כדאי להזכיר שהביטוי שלפנינו מוגדר היטב. במקרה של משתנה רציף מדובר באינטגרל של פונקציה של אפסילון, כפול הצפיפות של אפסילון, מסומנת כאן בh. לדוגמא אם נניח שאפסילון מתלפג נורמלית עם תוחלת אפס ושונות סיגמה בריבוע הצפיפות היא הצפיפות הנורמלית המוכרת, ומכאן אפשר להמשיך לפתח את האינטגרל וכולי. אבל בשביל השורה התחתונה שלנו לא צריך את האינטגרל, אפשר להישאר ברישום הסימבולי של תוחלת.

 אם אני פותח את הריבוע, אני מקבל תוחלת של f פחות f האט בריבוע, תוחלת של אפסילון בריבוע ועוד פעמיים התוחלת של אפסילון כפול f פחות f האט. אבל כאמור f האט כרגע הוא לא משתנה מקרי הוא נתון, לכן יש כאן תוחלת רק על אפסילון מוכפלת פי איזשהו קבוע, והתוחלת של אפסילון היא אפס לכן כל הביטוי מתאפס. נשארנו עם תוחלת של f פחות f האט בריבוע ועוד התוחלת של אפסילון בריבוע, אבל זה בדיוק שווה לשונות של אפסילון.

אנחנו רואים שניתן לפרק את שגיאת החיזוי הריבועית לשני ביטויים. לביטוי הראשון הראשון נהוג לקרוא הרידוסיבל ארור, ולשני שהוא השונות של אפסילון האירדוסיבל ארור.

איזו טעות נרצה שתהיה קטנה? שתיהן, אבל את האירדוסיבל ארור אנחנו לא יכולים באמת להפחית, היא נובעת מהרעש הטבעי שבנתונים, והמיקוד שלנו יהיה להפחית את הטעות הרידוסיבל, לדאוג שהחיזוי שלנו יהיה כמה שקרוב לפונקציה f. אבל מה עלול לקרות בפועל?
:::
:::

---

### A taste of overfitting

- But given an observation $(x, y, \hat{y}(x))$, we never know which part of its error is irreducible!

::: {.incremental}
- Informally, being too close to the data is called overfitting
- So the best prediction for a given $x$ is not necessarily $y$!
- Overfitting may get worse for non-parametric models (highly flexible)
:::

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
בפועל, אם נסתכל על שלישייה כזאת של X, Y וY האט החיזוי, אנחנו לא יודעים בפער בין Y לY האט מה החלק הרידוסיבל ומה האירדוסיבל!

ואוברפיטינג, קורה במצב הקיצוני כשמודל פשוט לומד לשנן את מדגם הלמידה. עבור כל X שראה הוא יודע לחזות רק את הY שראה. וזה לא חיזוי טוב בהכרח, בפועל חיזוי די רע. אוברפיטינג קורה כשהמודל מנסה להקטין את האירדוסיבל ארור, ולא מאפשר מרווח טעות טבעי לנתונים.

זה קורה הרבה פעמים דווקא במודלים א-פרמטריים שמאפשרים לפונקציה f להיות יותר ויותר גמישה, כמו שראינו ונראה עוד דוגמא.
:::
:::

---

### Overfitting with Splines

![](images/spline_train_test_demo.png)

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
כאן בשחור אנחנו רואים פונקציה f אמיתית של Y כנגד X, שממנה נדגמו הנתונים שמופיעים כנקודות שחורות.

מודל רגרסיה ליניארית לא גמיש מספיק, הוא מתאים קו ישר לנקודות ואפשר לראות שגם הטריין וגם הטסט ארורז שלו גבוהות. ציר האיקס בגרף מצד ימין מתייחס לדרגות החופש של המודל, שהוא פרמטר שלא דיברנו עליו אבל אינטואיטיבית הוא מבטא את גמישות המודל. רגרסיה הוא מודל מאוד לא גמיש, הוא מאפשר רק לשני פרמטרים להיות "חופשיים", השיפוע והחותך, ולכן דרגות החופש שלו הן 2.

לעומת המודל הליניארי, ספליין עם 5 דרגות חופש בקו הכחול נראה לא רע, הטסט ארור שלו הנמוכה ביותר כאן. וספליין עם 15 דרגות חופש בקו האדום הוא גמיש מדי. אפשר לראות שהוא כל כך גמיש שהוא מנסה ממש לעבור דרך הנקודות, פורמלית אמרנו שהוא מנסה להפחית כבר את האירדוסיבל ארור, הוא ממש מתחיל לשנן את הדאטא. זה אולי מאפשר לו להשיג טריין ארור נמוך כל כך, אבל הטסט ארור שלו על נתונים שהוא לא ראה גבוהה מאוד. סימן ברור לאובר-פיטינג.

ושוב נשים לב לקו השחור המקווקוו כאן שמסמל את השונות של סיגמא בריבוע, שכאן היא ידועה והיא 1 כי כך נבנתה הסימולציה. אפשר לראות שכל הקו הצהוב, שגיאת החיזוי של הטסט נמצא מעליה, כלומר היא בייסליין כמו שהיינו מצפים לשגיאת החיזוי.
:::
:::

---

### Why do we prefer simple models?

- The simpler the more interpretable (try to explain Splines)
- Simpler for inference
- Reduces overfitting
- But [may increase underfitting]{style="color:red;"}

::: {.fragment}
- So: It all depends on your goal!
:::

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
נסכם מדוע אנחנו נזהרים כל הזמן, מדוע אנחנו שואפים למודלים פשוטים יותר, עם מעט "דרגות חופש".

מודלים פשוטים יותר הם יותר אינטרפרטביליים, בדוגמת המודל הליניארי הפירוש של כל מקדם רגרסיה ברור, למשל אם הוא חיובי אז למשתנה המתאים יש השפעה "חיובית" על Y.

הם פשוטים יותר להסקה סטטיסטית, כי הם באים לרוב עם הנחות סטטיסטיות בדיוק לצורך מטרה זו.

וחשוב ביותר, הם בדרך כלל מקטינים אוברפיטינג, הם לא גמישים עד כדי כך שהם מתחילים כבר לשנן את הדאטא ולהפחית מהאירדוסיבל ארור, למצוא דפוס איפה שהוא לא קיים.

מנגד הם עלולים להגביר אנדרפיטינג, הם עלולים להיות נוקשים מדי. ולכן יש צורך למצוא את האיזון הנכון, והכל תלוי בסוף במטרת הפרויקט. הרבה פעמים אגב פשרה נחמדה היא שימוש בשני מודלים, מודל שתפקידו להסביר החוצה כיצד Y משתנה בהתאם לפיצ'רים בידיעה שהחיזוי שלו לא אופטימלי, ומודל שהוא קרוב יותר לקופסה שחורה שקשה להסביר, שתפקידו אך ורק חיזוי מיטבי.
:::
:::

---

### Why do we prefer simple models?

```{python}
#| echo: false

import matplotlib.pyplot as plt

# Data for the scatter plot
models = ['Subset Selection', 'Lasso', 'Least Squares', 'GAM, Splines', 'Trees', 'Bagging, Boosting', 'SVM', 'Deep Learning']
x = [1, 1, 4, 7, 7, 10, 8.5, 12]  # Flexibility
y = [10, 9.5, 7, 5, 4.5, 3, 1.5, 1]  # Interpretability

# Create the scatter plot
plt.figure(figsize=(10, 6))

# Annotate each point with the corresponding letter
for i, model in enumerate(models):
    plt.text(x[i], y[i], model, fontsize=12, ha='center', va='center', color='black')#, bbox=dict(facecolor='blue', edgecolor='blue', boxstyle='circle'))

# Set axis labels
plt.xlabel('Flexibility', fontsize=14)
plt.ylabel('Interpretability', fontsize=14)

# Set axis limits and ticks to create space for labels at ends
plt.xlim(-1, 14)
plt.ylim(-1, 11)

# Customizing the x and y axis labels at the ends
plt.xticks([1, 12], ['Low', 'High'], fontsize=12)
plt.yticks([1, 10], ['Low', 'High'], fontsize=12)

# Show the plot
plt.grid(False)
plt.show()
```

::: {.notes}
::: {style="direction:rtl; font-size:16px"}
נסיים במבט על על מספר מודלים שאנחנו לומדים בקורס מבחינת הגמישות והקלות שבה הם ניתנים לפירוש. בגדול יש איזשהו מתאם שלילי בין הגמישות שמאפשר המודל לבין היכולת לפרש אותו. בקצה באחד יש לנו סוגים שונים של רגרסיה כמו המודל הליניארי או רגרסיית לאסו שמבצעת פיצ'ר סלקשן בילט אין, כלומר המודל הסופי ייטה להיות מודל ליניארי עם אפילו פחות משתנים. ובקצה השני יש את למידה עמוקה, שאמורה להיות מסוגלת באמצעות רשת נוירונים עמוקה מספיק, להיות מסוגלת למדל f גמישה ככל שנרצה, עם סכנה חמורה של אוברפיטינג, ומודל סופי שהוא קופסה שחורה עד כדי כך שיש תחום מחקר שלם שנועד לנסות להסביר מודל מורכב כל כך.
:::
:::
